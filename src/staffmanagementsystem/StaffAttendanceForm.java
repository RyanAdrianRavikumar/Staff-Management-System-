package staffmanagementsystem;
import java.sql.*;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Date;


/**
 *
 * @author Lenovo
 */
public class StaffAttendanceForm extends javax.swing.JFrame {

    /**
     * Creates new form StaffAttendanceForm
     */
    public StaffAttendanceForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btncheckin = new javax.swing.JButton();
        btncheckout = new javax.swing.JButton();
        staffIdField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Record Staff Attendance - Staff Management System");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Staff ID:");

        btncheckin.setBackground(new java.awt.Color(0, 102, 255));
        btncheckin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btncheckin.setForeground(new java.awt.Color(255, 255, 255));
        btncheckin.setText("Check-in Attendance");
        btncheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckinActionPerformed(evt);
            }
        });

        btncheckout.setBackground(new java.awt.Color(0, 102, 255));
        btncheckout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btncheckout.setForeground(new java.awt.Color(255, 255, 255));
        btncheckout.setText("Check-out Attendance");
        btncheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckoutActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Record Attendance");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btncheckout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(staffIdField))
                        .addComponent(btncheckin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(staffIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btncheckin)
                .addGap(18, 18, 18)
                .addComponent(btncheckout)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 24, 380, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/staffmanagementsystem/88246.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckinActionPerformed
        String staffId = staffIdField.getText().trim();

    if (staffId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Staff ID is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int staffIdInt = Integer.parseInt(staffId);
        Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());

        String url = "jdbc:mysql://localhost/staffmanagementsystem";
        Connection con = DriverManager.getConnection(url, "root", "Zxcv@7890");

        String selectQuery = "SELECT checkin_time FROM attendance WHERE staff_ID = ? AND DATE(date) = CURDATE()";
        PreparedStatement selectPst = con.prepareStatement(selectQuery);
        selectPst.setInt(1, staffIdInt);

        ResultSet rs = selectPst.executeQuery();

        if (rs.next()) {
            if (rs.getTimestamp("checkin_time") != null) {
                JOptionPane.showMessageDialog(this, "Check-In already recorded for today!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String updateQuery = "UPDATE attendance SET checkin_time = ? WHERE staff_ID = ? AND DATE(date) = CURDATE()";
                PreparedStatement updatePst = con.prepareStatement(updateQuery);
                updatePst.setTimestamp(1, currentTimestamp);
                updatePst.setInt(2, staffIdInt);

                int result = updatePst.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Check-In time recorded successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                updatePst.close();
            }
        } else {
            String insertQuery = "INSERT INTO attendance (staff_ID, date, checkin_time) VALUES (?, ?, ?)";
            PreparedStatement insertPst = con.prepareStatement(insertQuery);
            insertPst.setInt(1, staffIdInt);
            insertPst.setTimestamp(2, currentTimestamp);
            insertPst.setTimestamp(3, currentTimestamp);

            int result = insertPst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Check-In time recorded successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            insertPst.close();
        }

        rs.close();
        selectPst.close();
        con.close();

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Staff ID must be a number!", "Validation Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btncheckinActionPerformed

    private void btncheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckoutActionPerformed
     String staffId = staffIdField.getText().trim();

    if (staffId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Staff ID is required!", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int staffIdInt = Integer.parseInt(staffId);
        Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());

        String url = "jdbc:mysql://localhost/staffmanagementsystem";
        Connection con = DriverManager.getConnection(url, "root", "Zxcv@7890");

        String selectQuery = "SELECT checkin_time, checkout_time FROM attendance WHERE staff_ID = ? AND DATE(date) = CURDATE()";
        PreparedStatement selectPst = con.prepareStatement(selectQuery);
        selectPst.setInt(1, staffIdInt);

        ResultSet rs = selectPst.executeQuery();

        if (rs.next()) {
            if (rs.getTimestamp("checkout_time") != null) {
                JOptionPane.showMessageDialog(this, "Check-Out already recorded for today!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (rs.getTimestamp("checkin_time") == null) {
                JOptionPane.showMessageDialog(this, "Cannot record Check-Out before Check-In!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String updateQuery = "UPDATE attendance SET checkout_time = ? WHERE staff_ID = ? AND DATE(date) = CURDATE()";
                PreparedStatement updatePst = con.prepareStatement(updateQuery);
                updatePst.setTimestamp(1, currentTimestamp);
                updatePst.setInt(2, staffIdInt);

                int result = updatePst.executeUpdate();
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Check-Out time recorded successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                updatePst.close();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Cannot record Check-Out before Check-In!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        rs.close();
        selectPst.close();
        con.close();

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Staff ID must be a number!", "Validation Error", JOptionPane.ERROR_MESSAGE);
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btncheckoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffAttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffAttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffAttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffAttendanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffAttendanceForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncheckin;
    private javax.swing.JButton btncheckout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField staffIdField;
    // End of variables declaration//GEN-END:variables
}
